function n({data:e}){const t=[],r=[],p=e.reduce((u,o,s)=>(o.group?u[o.group]?u[o.group].push(s):u[o.group]=[s]:r.push(s),u),{});return Object.keys(p).forEach(u=>{t.push(...p[u].map(o=>e[o]))}),t.push(...r.map(u=>e[u])),t}function g(e){const t=n({data:e}),r=[],p=[];let u=null;return t.forEach((o,s)=>{o.group?(u!==o.group&&(u=o.group,p.push({type:"label",label:u})),p.push({type:"item",item:o,index:s})):r.push({type:"item",item:o,index:s})}),{grouped:p,unGrouped:r,items:[...p,...r],hasItems:p.length>0||r.length>0}}export{n as a,g};
